<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Accounts" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="AccountsM" xml:space="preserve">
    <value>Accounts Management</value>
  </data>
  <data name="AccountsN" xml:space="preserve">
    <value>Create new account</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AdminHome" xml:space="preserve">
    <value>Admin Home</value>
  </data>
  <data name="AllOrders" xml:space="preserve">
    <value>All Orders</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="BestMed1" xml:space="preserve">
    <value>The best medicines</value>
  </data>
  <data name="BestMed2" xml:space="preserve">
    <value>at our Institute</value>
  </data>
  <data name="BestMed3" xml:space="preserve">
    <value>Medicine</value>
  </data>
  <data name="Buy" xml:space="preserve">
    <value>Buy Now</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="CategoriesE" xml:space="preserve">
    <value>Categories Editor</value>
  </data>
  <data name="CategoriesM" xml:space="preserve">
    <value>Categories Management</value>
  </data>
  <data name="CategoriesN" xml:space="preserve">
    <value>Create new Category</value>
  </data>
  <data name="CFPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="DeleteCategories" xml:space="preserve">
    <value>Do you want to delete Category:</value>
  </data>
  <data name="DeleteUser" xml:space="preserve">
    <value>Do you want to delete User: </value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DetailsOfCategories" xml:space="preserve">
    <value>Detail of Category:</value>
  </data>
  <data name="DetailsOfUser" xml:space="preserve">
    <value>Detail of User: </value>
  </data>
  <data name="fact1" xml:space="preserve">
    <value>satisfied customers</value>
  </data>
  <data name="fact2" xml:space="preserve">
    <value>quality of service</value>
  </data>
  <data name="fact3" xml:space="preserve">
    <value>quality certificates</value>
  </data>
  <data name="fact4" xml:space="preserve">
    <value>Available Products</value>
  </data>
  <data name="Feature1" xml:space="preserve">
    <value>Free Shipping</value>
  </data>
  <data name="Feature2" xml:space="preserve">
    <value>Security Payment</value>
  </data>
  <data name="Feature3" xml:space="preserve">
    <value>30 Day Return</value>
  </data>
  <data name="Feature4" xml:space="preserve">
    <value>24/7 Support</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Hero1" xml:space="preserve">
    <value>100% No harmful chemistry</value>
  </data>
  <data name="Hero2" xml:space="preserve">
    <value>Medicines &amp; Dietary Supplements</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Hospital" xml:space="preserve">
    <value>Traditional Medicine Hospital</value>
  </data>
  <data name="Ingredient" xml:space="preserve">
    <value>Ingredient</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="LoginAsk1" xml:space="preserve">
    <value>Already got an account ?</value>
  </data>
  <data name="LoginAsk2" xml:space="preserve">
    <value>Sign in here!</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="Logup" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="LogupAsk1" xml:space="preserve">
    <value>Don't have an account yet?</value>
  </data>
  <data name="LogupAsk2" xml:space="preserve">
    <value>Sign up here!</value>
  </data>
  <data name="Medicines" xml:space="preserve">
    <value>Medicines</value>
  </data>
  <data name="MedicinesM" xml:space="preserve">
    <value>Medicines Management</value>
  </data>
  <data name="MedicinesN" xml:space="preserve">
    <value>Create a new Medicine</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Notilogin" xml:space="preserve">
    <value>You have not logged in yet. Sign in here</value>
  </data>
  <data name="OrderList" xml:space="preserve">
    <value>List Orders</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="OrdersM" xml:space="preserve">
    <value>Orders Management</value>
  </data>
  <data name="Pack" xml:space="preserve">
    <value>Pack</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PendingOrders" xml:space="preserve">
    <value>Pending Orders</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search by keyword</value>
  </data>
  <data name="SearchNow" xml:space="preserve">
    <value>Search now!</value>
  </data>
  <data name="ShippingOrders" xml:space="preserve">
    <value>Shipping Orders</value>
  </data>
  <data name="Shop" xml:space="preserve">
    <value>Shop</value>
  </data>
  <data name="SubFeature1" xml:space="preserve">
    <value>Free on order over $300</value>
  </data>
  <data name="SubFeature2" xml:space="preserve">
    <value>100% security payment</value>
  </data>
  <data name="SubFeature3" xml:space="preserve">
    <value>30 day money guarantee</value>
  </data>
  <data name="SubFeature4" xml:space="preserve">
    <value>Support every time fast</value>
  </data>
  <data name="SubTesti" xml:space="preserve">
    <value>Our Client Saying!</value>
  </data>
  <data name="Testi" xml:space="preserve">
    <value>Our Testimonial</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Uses" xml:space="preserve">
    <value>Uses</value>
  </data>
</root>